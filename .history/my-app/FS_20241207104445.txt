
<!--
1. Build a Get Path handler to return all the 5 students infomation in express.

2. Display all the students information in a table using ReactJS having the following
column names: Name, Roll Number, Java, CPP, Python, GenAI, FSD
Table Name in an H3 tag above the table with name: Students List


===================================================
Steps to run two ngrok tunnels 1) React, 2) Express:
===================================================

Start ngrok.exe using the following command:
--------------------------------------------
    ngrok config add-authtoken <AUTH-TOKEN>

Copy and save the Authtoken saved configuration file like below: 
----------------------------------------------------------------
    C:\Users\<UserName>\AppData\Local/ngrok/ngrok.yml


Copy the forwarding links information:
--------------------------------------
    For React App (Client):
    https://<ngrok's unique code>.ngrok-free.app -> http://localhost:3000 
    
    For Express App (Server):
    https://<ngrok's unique code>.ngrok-free.app -> http://localhost:4000    


Update the cors policy link in express server and restart the server.
And then provide the client link as URL value.

-->

<config>
    <url value="https://ac2b-2409-40f0-11c2-9739-a995-5ca7-7527-a5bc.ngrok-free.app/"></url>
</config>





<!--

Display the NavBar with Title as "Student App, and two nav items as follows:
"Add Student", "View Students". 
where, 
 - Add Student should have form to capture Student information
 - View Student should display all students information.(Ex-1).

-->

<config>
    <url value="https://021b-103-211-9-97.ngrok-free.app/"></url>
</config>







<!--

Display all the students information in a table using ReactJS having the following
column names: Name, Roll Number, Java, CPP, Python, GenAI, FSD
Table Name in an H3 tag above the table with name: Students List

-->

<config>
    <url value="https://aad3-103-211-9-97.ngrok-free.app/"></url>
</config>





<!--
Open the React App, go to Students Table (View Students) Component,
Add a button with name Update for each of the row in the table.

 - Each row should have an ID, "row201", "row202",.. (i.e., row+rollno)
 - Each button in the row, should have an ID, "update201", "update202",.. 
   (i.e., update+rollno)
Update Student:
 - Clicking the Update button makes the scores in the row editable.
 - After editing, clicking Submit updates the database (PUT /student/:rollNo).
 - The table should refresh automatically to reflect the updated scores.

-->

<config>
    <url value=""></url>
</config>








<!--
Open the React App, go to Students Table (View Students) Component, 
- Each row should have Delete button to remove student data from Database,
 - Display an alert message, "Student(s) deleted successfully".

-->

<config>
    <url value=""></url>
</config>